package com.company.chapter09interfaces.tasks.task01;

/**
 * 2. (1) Создайте класс и объявите его как abstract, не включая в него ни одного абстрактного метода.
 * Затем убедитесь, что вы не можете создавать экземпляры этого класса.
 * <p>
 * 3. (2) Создайте базовый класс с определением метода abstract print(), переопределяемого производными классами.
 * Переопределенная версия методавыводит значение
 * переменной int, определенной в производном классе. В точке определения этой
 * переменной присвойте ей ненулевое значение.
 * Вызовите этот метод в конструкторе базового класса. В методе main() создайте объект производного типа,
 * а затем вызовите его метод print(). Объясните результат работы программы.
 * <p>
 * 4. (3) Создайте абстрактный (abstract) класс без методов. Произведите от него класс
 * и добавьте метод. Создайте статический (sta tic ) метод, получающий ссылку на
 * базовый класс, проведите нисходящее преобразование к производному типу и вызовите его метод.
 * Продемонстрируйте, что такой способ работает, в методе main().
 * Теперь поместите в определениеметода из базового класса ключевое слово abstract,
 * и необходимость в нисходящем преобразовании исчезнет.
 */
class Scratch_1 {
    public static void main(String[] args) {
        //AbsClass absClass = new AbsClass (); //Экземпляр абстрактного класса создать нельязя
        Child child = new Child(); //Конструктор базового класса выполняется, даже если класс абстрактный
        child.print1();
    }
}