package com.company.chapter17containerdetails.tasks.task03;

/**
 * 7. (4) Создайте объекты A r r a y L i s t и L i n k e d L i s t , заполните каждый из них с использованием
 * генератора C o u n t r i e s . n a m e s (). Выведите списки с использованием обычного
 * итератора I t e r a t o r , затем вставьте один список в другой с использованием L i s t -
 * I t e r a t o r , выполняя вставку через позицию. Теперь выполните вставку, начиная от
 * конца первого списка и перемещаясь в обратном направлении.
 * <p>
 * 8. (7) Создайте обобщенный класс односвязногО списка с именем S L i s t , который для
 * простоты не реализует интерфейс L i s t . Каждый объект узла L i n k должен содержать
 * ссылку на следующий элемент списка, но не на предыдущий (в отличие от двусвязного списка L i n k e d L i s t ,
 * который поддерживает ссылки в обоих направлениях).
 * Создайте собственную реализацию S L i s t l t e r a t o r , которая (опять же для простоты)
 * не реализует L i s t l t e r a t o r . Кроме t o S t r i n g ( ) , класс S L i s t должен содержать только
 * метод i t e r a t o r ( ) , который создает S L i s t l t e r a t o r . Вставка и удаление элементов из
 * S L i s t должны выполняться только через S L i s t l t e r a t o r . Напишите код для демонстрации S L i s t .
 */
public class task03 {
}
