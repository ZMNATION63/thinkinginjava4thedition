package com.company.chapter17containerdetails.tasks.task013;

/**
 * 34. (1) Измените код SetPerformance.java так, чтобы в Set вместо Integer хранились объекты String.
 * Для создания тестовых значений используйте генератор из главы 16.
 * 35. ( 1) Измените код MapPerformance.java и включите в него тесты для реализации slowMap.
 * 36. (5) Измените карту SlowMap, чтобы вместо двух списков ArrayList в ней хранился
 * один список объектов ArrayList или MapEntry. Покажите, что эта версия класса работает правильно.
 * С помощью программы MapPerformance.java проверьте быстродействие нового класса.
 * После этого измените метод put() так, чтобы после помещения
 * очередной парът он проводил сортировку карты, а в методе get() для поиска ключа
 * примените метод Collections. binarySearch(). Сравните быстродействие этой версии
 * таблицы с предыдущими реализациями.
 * 37. (2) Модифицируйте класс SimpleHashMap так, чтобы в нем использовались списки
 * ArrayList вместо LinkedList. Измените программу MapPerformance.java и сравните
 * быстродействие двух реализаций.
 * <p>
 * 38. (3) В интерактивной документации^К найдите описание класса HashMap. Создайте
 * карту HashMap, заполните ее элементами и определите ее коэффициент загрузки.
 * Оцените скорость поиска, а затем попытайтесь увеличить быстродействие, создав
 * новую карту HashMap с большей начальной емкостью, скопируйте старую версию
 * в новую и проведите проверку скорости поиска для новой таблицы.
 * <p>
 * 39. (6) Добавьте в SimpleHashMap закрытый (private) метод rehash(), который проводит
 * перехеширование, когда коэффициент загрузки превышает 0,75. В процессе перехеширования удвойте число ячеек,
 * затем проведите поиск первого простого числа
 * после полученного значения, чтобы узнать, сколько надо сделать новых ячеек.
 */
public class task013 {
}
