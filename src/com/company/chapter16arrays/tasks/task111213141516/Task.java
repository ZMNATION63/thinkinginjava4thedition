package com.company.chapter16arrays.tasks.task111213141516;

/**
 * 11. (2) Покажите, что автоматическая упаковка не работает с массивами.
 * 12. (1) Создайте инициализированный массив double с использованием CountingGenerator. Выведите результаты.
 * 13. (2) Заполните объект String с использованием Соип^г^бепегз^г.СЬага^ег.
 * 14. (6) Создайте массив каждого из примитивных типов. Заполните каждый массив с
 * использованием CountingGenerator. Выведите содержимое каждого массива.
 * 15. (2) Измените пример ContainerComparison.java: создайте Generator для BerylliumSphere
 * и измените метод m a i n ( ) , чтобы он использовал GeneratorсGenerated.array().
 * 16. (3) Начав с CountingGenerator.java, создайте класс S k i p G e n e r a t o r , который создает
 * новые значения посредством приращения, определяемого аргументом конструктора. Измените npHMepTestArrayGeneration.java и покажите, что новый класс работает
 * правильно.
 * 17. (5) Создайте и протестируйте G e n e r a t o r для B i g D e c i m a l . Убедитесь в том, что он
 * работает с методами G e n e r a t e d .
 */
public class Task {
}
