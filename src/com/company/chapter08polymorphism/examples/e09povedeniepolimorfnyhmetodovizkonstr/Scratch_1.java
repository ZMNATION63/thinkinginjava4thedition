package com.company.chapter08polymorphism.examples.e09povedeniepolimorfnyhmetodovizkonstr;

/**
 * Суть в том, что поле дочернего класса определяется в доччернем классе
 * Метод ддля переопределеня вызывается из класса родителя,
 * Java машина будет вызывать метод дочернего класса, обращаясь к переменным дочернего класса, а они еще не определены!
 * <p>
 * Память, выделенная под новый объект, заполняется двоичными нулями.
 * □ Конструкторы базовых классов вызываются в описанном ранее порядке. В этот
 * момент вызывается переопределенный метод draw() (да, перед вызовом конструктора класса RoundGlyph),
 * где обнаруживается, что переменная radius равна нулю
 * из-за первого этапа.
 * □ Вызываются инициализаторы членов класса в порядке их определения.
 * □ Исполняется тело конструктора производного класса.
 */
class Scratch_1 {
    public static void main(String[] args) {
        new RoundGlyph(5);
    }
}